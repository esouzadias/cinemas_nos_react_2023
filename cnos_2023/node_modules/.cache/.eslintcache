[{"/Users/eric/Documents/GitHub/ReactJS/cinemas_nos_react_2023/cnos_2023/src/index.js":"1","/Users/eric/Documents/GitHub/ReactJS/cinemas_nos_react_2023/cnos_2023/src/reportWebVitals.js":"2","/Users/eric/Documents/GitHub/ReactJS/cinemas_nos_react_2023/cnos_2023/src/App.js":"3","/Users/eric/Documents/GitHub/ReactJS/cinemas_nos_react_2023/cnos_2023/src/Layout/Header/Header.js":"4","/Users/eric/Documents/GitHub/ReactJS/cinemas_nos_react_2023/cnos_2023/src/Layout/MainIntro/MainIntro.js":"5","/Users/eric/Documents/GitHub/ReactJS/cinemas_nos_react_2023/cnos_2023/src/Services/Utils/ApiRequests.js":"6","/Users/eric/Documents/GitHub/ReactJS/cinemas_nos_react_2023/cnos_2023/src/Layout/MainIntro/SearchMenu/SearchMenu.js":"7","/Users/eric/Documents/GitHub/ReactJS/cinemas_nos_react_2023/cnos_2023/src/Layout/MovieList/MovieList.js":"8","/Users/eric/Documents/GitHub/ReactJS/cinemas_nos_react_2023/cnos_2023/src/Layout/Cinemas/Cinemas.js":"9","/Users/eric/Documents/GitHub/ReactJS/cinemas_nos_react_2023/cnos_2023/src/Layout/Cinemas/CinemasList.js":"10","/Users/eric/Documents/GitHub/ReactJS/cinemas_nos_react_2023/cnos_2023/src/Components/Banner/Banner.js":"11","/Users/eric/Documents/GitHub/ReactJS/cinemas_nos_react_2023/cnos_2023/src/Components/GiftCard/GiftCard.js":"12"},{"size":535,"mtime":1695717024481,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1695717024481,"results":"15","hashOfConfig":"14"},{"size":7513,"mtime":1695818518963,"results":"16","hashOfConfig":"14"},{"size":785,"mtime":1695716981042,"results":"17","hashOfConfig":"14"},{"size":3809,"mtime":1695717024480,"results":"18","hashOfConfig":"14"},{"size":3115,"mtime":1695717024481,"results":"19","hashOfConfig":"14"},{"size":297,"mtime":1695717648561,"results":"20","hashOfConfig":"14"},{"size":2276,"mtime":1695717040896,"results":"21","hashOfConfig":"14"},{"size":2914,"mtime":1695725746479,"results":"22","hashOfConfig":"14"},{"size":2085,"mtime":1695810768442,"results":"23","hashOfConfig":"14"},{"size":497,"mtime":1695813513530,"results":"24","hashOfConfig":"14"},{"size":365,"mtime":1695816508208,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"ylrfcz",{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"29"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"29"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"29"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/eric/Documents/GitHub/ReactJS/cinemas_nos_react_2023/cnos_2023/src/index.js",[],[],[],"/Users/eric/Documents/GitHub/ReactJS/cinemas_nos_react_2023/cnos_2023/src/reportWebVitals.js",[],[],"/Users/eric/Documents/GitHub/ReactJS/cinemas_nos_react_2023/cnos_2023/src/App.js",["66"],[],"/Users/eric/Documents/GitHub/ReactJS/cinemas_nos_react_2023/cnos_2023/src/Layout/Header/Header.js",["67","68"],[],"import React from 'react'\nimport \"./Header.scss\";\nimport logoNos from '../../Assets/Images/logo-nos.svg';\nimport SearchMenu from '../MainIntro/SearchMenu/SearchMenu';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSearch } from '@fortawesome/free-solid-svg-icons'\n\nfunction Header() {\n  return (\n    <div className=\"header-main\">\n      <div className='header-content'>\n        <span><h2>Cinemas</h2> <img src={logoNos} /> </span>\n        <span id=\"search\">\n          <input className='search-input' type='text' name=\"fulltext\" role='combobox' placeholder='Pesquise por filmes, atores, realizadores...'/>\n          <FontAwesomeIcon className='icon' icon={faSearch} />\n        </span>\n      </div>\n      <SearchMenu />\n    </div>\n  )\n}\n\nexport default Header","/Users/eric/Documents/GitHub/ReactJS/cinemas_nos_react_2023/cnos_2023/src/Layout/MainIntro/MainIntro.js",["69","70"],[],"import React, { useState, useEffect } from 'react'\nimport './MainIntro.scss'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlay } from '@fortawesome/free-solid-svg-icons'\nimport { faClose } from '@fortawesome/free-solid-svg-icons'\nimport { fetchMovieTrailersData } from '../../Services/Utils/ApiRequests.js';\n\nfunction MainIntro({ mainMovie, currentMovieIndex, currentMovieGenre, movieTime }) {\n  const [backgroundImage, setBackgroundImage] = useState(mainMovie && (`url(https://image.tmdb.org/t/p/w500${mainMovie[currentMovieIndex].poster_path})`));\n  const [trailerPlaying, setTrailerPlaying] = useState(false);\n  const [currentMovie, setCurrentMovie] = useState(mainMovie[0]);\n  const [movieTrailersData, setMovieTrailersData] = useState(null);\n\n  const handleTrailerClick = (e) => {\n    e.currentTarget.style.display = 'none';\n    e.currentTarget.parentElement.style.transition = \"width 0.5s ease-in-out\";\n    e.currentTarget.parentElement.style.width = \"100%\";\n    e.currentTarget.parentElement.parentElement.style.paddingTop = \"110px\";\n    e.currentTarget.parentElement.style.animation = \"fadeOut ease 0.5s\";\n    fetchTrailers();\n    setTimeout(function () {\n    if (!trailerPlaying) {\n      setTrailerPlaying(true);\n    }\n  }, 500);\n  }\n\n  const handleCloseClick = (e) => {\n    setTrailerPlaying(false);\n    e.currentTarget.parentElement.style.paddingTop = \"50px\";\n  }\n\n  const fetchTrailers = async () => {\n    try {\n      const movieTrailersResponse = await fetchMovieTrailersData(currentMovie.id);\n      setMovieTrailersData(movieTrailersResponse.results);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  useEffect(() => {\n    if (!trailerPlaying) {\n      mainMovie && (setBackgroundImage(`url(https://image.tmdb.org/t/p/w500${mainMovie[currentMovieIndex].poster_path})`));\n      setCurrentMovie(mainMovie[currentMovieIndex]);\n\n      // Configurar um temporizador para alterar o plano de fundo a cada x segundos\n      const timerId = setTimeout(() => {\n        const nextIndex = (currentMovieIndex + 1) % 6; // Alternar entre os 6 filmes\n        setBackgroundImage(\n          mainMovie && mainMovie[nextIndex]\n            ? `url(https://image.tmdb.org/t/p/w500${mainMovie[nextIndex].poster_path})`\n            : ''\n        );\n      }, 10000); // Alterar a cada 5 segundos (ou o que desejar)\n\n      return () => {\n        // Limpar o temporizador quando o componente é desmontado ou quando o índice muda\n        clearTimeout(timerId);\n      };\n    }\n  }, [currentMovieIndex, mainMovie]);\n\n  return (\n    <div id='main-intro'>\n      {trailerPlaying && (<FontAwesomeIcon id='closeBtn' onClick={handleCloseClick.bind(this)} icon={faClose} />)}\n      <div id='main-intro-content'>\n        {!trailerPlaying ? (\n          <div onClick={handleTrailerClick} id={'video-player'} style={{ backgroundImage: backgroundImage, backgroundSize: 'cover' }}>\n            <FontAwesomeIcon className='icon' icon={faPlay} />\n          </div>\n        ) : (\n        <>\n          <iframe width=\"100%\" height=\"80%\" src={movieTrailersData && `https://www.youtube.com/embed/${movieTrailersData[4].key}?autoplay=1`} />\n        </>\n        )}\n        {!trailerPlaying && (\n          <div className='movie-info'>\n            <div className='movie-info-container'>\n              <span>M16 • {currentMovieGenre ? currentMovieGenre : null} | {movieTime ? movieTime : null}</span>\n              <h2>{mainMovie[currentMovieIndex]?.original_title}</h2>\n              <span>{mainMovie[currentMovieIndex]?.overview}</span>\n              <div>\n                Língua: {mainMovie[currentMovieIndex].original_language}\n                <button>Comprar Bilhete</button>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  )\n}\n\nexport default MainIntro","/Users/eric/Documents/GitHub/ReactJS/cinemas_nos_react_2023/cnos_2023/src/Services/Utils/ApiRequests.js",[],[],"/Users/eric/Documents/GitHub/ReactJS/cinemas_nos_react_2023/cnos_2023/src/Layout/MainIntro/SearchMenu/SearchMenu.js",[],[],"/Users/eric/Documents/GitHub/ReactJS/cinemas_nos_react_2023/cnos_2023/src/Layout/MovieList/MovieList.js",["71"],[],"import React, { useMemo } from 'react';\nimport './MovieList.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTicket } from '@fortawesome/free-solid-svg-icons'\n\nfunction MovieList({ movieData, currentMovieIndex, movieTimes, movieGenres, setMainMovie }) {\n  const displayedMovies = movieData && movieData.slice(0, 6);\n  const adultGenres = [\"Horror\", \"Thriller\", \"Drama\"];\n\n  const getMovieGenres = (movieIndex) => {\n    if (movieGenres && movieData && movieData[movieIndex]) {\n      const movieGenreIds = movieData[movieIndex].genre_ids || [];\n      const movieGenreNames = movieGenreIds.map((genreId) => {\n        const genre = movieGenres.find((genre) => genre.id === genreId);\n        return genre ? genre.name : \"\";\n      });\n      return movieGenreNames.join(\", \");\n    }\n    return \"\";\n  };\n\n  const isAdult = useMemo(() => {\n    if (movieGenres && movieData && movieData[currentMovieIndex]) {\n      const currentGenreIds = movieData[currentMovieIndex].genre_ids || [];\n      const currentGenreNames = currentGenreIds.map((genreId) => {\n        const genre = movieGenres.find((genre) => genre.id === genreId);\n        return genre ? genre.name : \"\";\n      });\n      return currentGenreNames.some((genre) => adultGenres.includes(genre));\n    }\n    return false;\n  }, [movieGenres, movieData, currentMovieIndex]);\n\n  const handleMovieClick = () => {\n\n  }\n\n  return (\n    <div>\n      {displayedMovies && (\n        <div id='playing-movies'>\n          <ul>\n            {displayedMovies.map((movie, index) => (\n              <li onClick={handleMovieClick} key={movie.id}>\n                <span id='comprar-bilhete'>\n                  <FontAwesomeIcon className='icon' icon={faTicket}/>\n                  <h4>Comprar Bilhete</h4>\n                </span>\n                <img src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`} alt={movie.title} />\n                <div className='movie-poster-info'>\n                  <h3>{movie.title}</h3>\n                  <p>{getMovieGenres(index)}</p>\n                  <p>{isAdult ? `M18 • ${movieTimes[index]}` : `M14 • ${movieTimes[index]}`}</p>\n                </div>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default MovieList;\n","/Users/eric/Documents/GitHub/ReactJS/cinemas_nos_react_2023/cnos_2023/src/Layout/Cinemas/Cinemas.js",[],[],"/Users/eric/Documents/GitHub/ReactJS/cinemas_nos_react_2023/cnos_2023/src/Layout/Cinemas/CinemasList.js",[],[],"/Users/eric/Documents/GitHub/ReactJS/cinemas_nos_react_2023/cnos_2023/src/Components/Banner/Banner.js",[],[],"/Users/eric/Documents/GitHub/ReactJS/cinemas_nos_react_2023/cnos_2023/src/Components/GiftCard/GiftCard.js",[],[],{"ruleId":"72","severity":1,"message":"73","line":11,"column":84,"nodeType":"74","messageId":"75","endLine":11,"endColumn":106},{"ruleId":"76","severity":1,"message":"77","line":12,"column":32,"nodeType":"78","endLine":12,"endColumn":53},{"ruleId":"79","severity":1,"message":"80","line":14,"column":71,"nodeType":"81","endLine":14,"endColumn":86},{"ruleId":"82","severity":1,"message":"83","line":62,"column":6,"nodeType":"84","endLine":62,"endColumn":36,"suggestions":"85"},{"ruleId":"86","severity":1,"message":"87","line":74,"column":11,"nodeType":"78","endLine":74,"endColumn":145},{"ruleId":"82","severity":1,"message":"88","line":32,"column":6,"nodeType":"84","endLine":32,"endColumn":49,"suggestions":"89"},"no-unused-vars","'fetchMovieTrailersData' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/role-has-required-aria-props","Elements with the ARIA role \"combobox\" must have the following attributes defined: aria-controls,aria-expanded","JSXAttribute","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'trailerPlaying'. Either include it or remove the dependency array.","ArrayExpression",["90"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","React Hook useMemo has a missing dependency: 'adultGenres'. Either include it or remove the dependency array.",["91"],{"desc":"92","fix":"93"},{"desc":"94","fix":"95"},"Update the dependencies array to be: [currentMovieIndex, mainMovie, trailerPlaying]",{"range":"96","text":"97"},"Update the dependencies array to be: [movieGenres, movieData, currentMovieIndex, adultGenres]",{"range":"98","text":"99"},[2509,2539],"[currentMovieIndex, mainMovie, trailerPlaying]",[1305,1348],"[movieGenres, movieData, currentMovieIndex, adultGenres]"]