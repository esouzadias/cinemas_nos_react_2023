{"ast":null,"code":"var _jsxFileName = \"/Users/eric/Documents/GitHub/ReactJS/cinemas_nos_react_2023/cnos_2023/src/Layout/NowPlaying/NowPlaying.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { fetchMoviesData, fetchMoviesImages } from '../../Services/Utils/ApiRequests';\nimport './NowPlaying.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NowPlaying() {\n  _s();\n  const [movieData, setMovieData] = useState(null);\n  const [movieImageData, setMovieImageData] = useState([]);\n  const fetchMovies = async () => {\n    try {\n      const data = await fetchMoviesData();\n      setMovieData(data);\n      console.log(data);\n      const movieIds = data.results.map(movie => {\n        return movieData = {\n          id: movie.id,\n          img: movie.poster_path\n        };\n      });\n\n      // Faz o fetch das imagens com base nas URLs\n      const imageResponses = await Promise.all(movieIds.map(movieId => fetchMoviesImages(movieId)));\n\n      // Converte as respostas em dados de imagem\n      const imageData = await Promise.all(imageResponses.map(async response => {\n        const blob = await response.blob();\n        return URL.createObjectURL(blob);\n      }));\n      setMovieImageData(imageData); // Define os dados da imagem no estado\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  /* const fetchMovieImages = async () => {\n    try {\n      const data = await fetchMoviesImages(poster_path);\n      setMovieImageData(data); // Define os dados da API no estado\n      console.log(data);\n    } catch (error) {\n      console.error(error);\n    }\n  }; */\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchMovies,\n      children: \"Clique para buscar filmes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), movieData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Filmes em cartaz\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"playing-movies\",\n        style: {\n          listStyleType: \"none\"\n        },\n        children: movieData.results.map((movie, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [movie.title, movieImageData[index] && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: movieImageData[index],\n            alt: movie.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 19\n          }, this)]\n        }, movie.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n_s(NowPlaying, \"o6wQCB09RM/XAthcQdanWhWNZZ8=\");\n_c = NowPlaying;\nexport default NowPlaying;\nvar _c;\n$RefreshReg$(_c, \"NowPlaying\");","map":{"version":3,"names":["React","useState","fetchMoviesData","fetchMoviesImages","jsxDEV","_jsxDEV","NowPlaying","_s","movieData","setMovieData","movieImageData","setMovieImageData","fetchMovies","data","console","log","movieIds","results","map","movie","id","img","poster_path","imageResponses","Promise","all","movieId","imageData","response","blob","URL","createObjectURL","error","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","className","style","listStyleType","index","title","src","alt","_c","$RefreshReg$"],"sources":["/Users/eric/Documents/GitHub/ReactJS/cinemas_nos_react_2023/cnos_2023/src/Layout/NowPlaying/NowPlaying.js"],"sourcesContent":["\nimport React, {useState} from 'react'\nimport { fetchMoviesData, fetchMoviesImages } from '../../Services/Utils/ApiRequests';\nimport './NowPlaying.scss'\n\nfunction NowPlaying() {\nconst [movieData, setMovieData] = useState(null);\nconst [movieImageData, setMovieImageData] = useState([]);\n\nconst fetchMovies = async () => {\n  try {\n    const data = await fetchMoviesData();\n    setMovieData(data); \n    console.log(data);\n\n    const movieIds = data.results.map((movie) => {\n      return movieData = {\n        id: movie.id,\n        img: movie.poster_path\n      }\n    });\n\n    // Faz o fetch das imagens com base nas URLs\n    const imageResponses = await Promise.all(\n      movieIds.map((movieId) => fetchMoviesImages(movieId))\n    );\n\n    // Converte as respostas em dados de imagem\n    const imageData = await Promise.all(\n      imageResponses.map(async (response) => {\n        const blob = await response.blob();\n        return URL.createObjectURL(blob);\n      })\n    );\n\n    setMovieImageData(imageData); // Define os dados da imagem no estado\n    } catch (error) {\n      console.error(error);\n    }\n};\n\n/* const fetchMovieImages = async () => {\n  try {\n    const data = await fetchMoviesImages(poster_path);\n    setMovieImageData(data); // Define os dados da API no estado\n    console.log(data);\n  } catch (error) {\n    console.error(error);\n  }\n}; */\n\n  return (\n    <div>\n      <button onClick={fetchMovies}>Clique para buscar filmes</button>\n      {/* <button onClick={fetchMovieImages}>Clique para buscar imagens dos filmes</button> */}\n      {movieData && (\n        <div>\n          <h2>Filmes em cartaz</h2>\n          <ul className='playing-movies' style={{listStyleType: \"none\"}}>\n            {movieData.results.map((movie, index) => (\n              <li key={movie.id}>\n                {movie.title}\n                {movieImageData[index] && (\n                  <img src={movieImageData[index]} alt={movie.title} />\n                )}\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  )\n}\n\nexport default NowPlaying"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}