{"ast":null,"code":"var _jsxFileName = \"/Users/eric/Documents/GitHub/ReactJS/cinemas_nos_react_2023/cnos_2023/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Header from \"./Layout/Header/Header\";\nimport MainIntro from './Layout/MainIntro/MainIntro';\nimport NowPlaying from './Layout/NowPlaying/NowPlaying';\nimport { fetchMoviesData, fetchMoviesGenres } from './Services/Utils/ApiRequests';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isMobile, setIsMobile] = useState(false);\n  const [movieData, setMovieData] = useState(null);\n  const [movieGenres, setMovieGenres] = useState(null);\n  const [currentMovieGenre, setCurrentMovieGenre] = useState([]);\n  const [currentMovieIndex, setCurrentMovieIndex] = useState(0); // Índice inicial\n  const intervalTime = 10000; // Alterar a cada 5 segundos (ou o que desejar)\n\n  const fetchMovies = async () => {\n    try {\n      const data = await fetchMoviesData();\n      const sortedMovies = data.results.sort((a, b) => b.vote_average - a.vote_average) // Classificar em ordem decrescente de média de votos\n      .slice(0, 6); // Pegar os 6 primeiros filmes da lista classificada\n      setMovieData(sortedMovies);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const fetchMovieGenres = async () => {\n    try {\n      const data = await fetchMoviesGenres();\n      const genres = data.genres || [];\n      setMovieGenres(genres);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const fetchMovieExpandedDetails = async () => {\n    try {\n      const data = await fetchMovieExpandedDetails();\n      const details = data || [];\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  useEffect(() => {\n    if (movieData && movieData[currentMovieIndex]) {\n      const currentMovieGenreIds = movieData[currentMovieIndex].genre_ids || [];\n      const currentMovieGenreNames = currentMovieGenreIds.map(genreId => {\n        const genre = movieGenres.find(genre => genre.id === genreId);\n        return genre ? genre.name : \"\";\n      }).join(\", \");\n      setCurrentMovieGenre(currentMovieGenreNames);\n    }\n  }, [currentMovieIndex, movieData, movieGenres]);\n  useEffect(() => {\n    fetchMovies();\n    fetchMovieGenres();\n    fetchMovieExpandedDetails();\n\n    // Configurar um intervalo para alterar o filme exibido a cada x segundos\n    const intervalId = setInterval(() => {\n      setCurrentMovieIndex(prevIndex => (prevIndex + 1) % 6); // Alternar entre os 6 filmes\n    }, intervalTime);\n    return () => {\n      // Limpar o intervalo quando o componente é desmontado\n      clearInterval(intervalId);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), movieData && currentMovieGenre && /*#__PURE__*/_jsxDEV(MainIntro, {\n      mainMovie: movieData ? movieData : null,\n      currentMovieIndex: currentMovieIndex,\n      currentMovieGenre: currentMovieGenre\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(NowPlaying, {\n      movieData: movieData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"SFganWZsv2MMWuoajInExk4mymM=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Header","MainIntro","NowPlaying","fetchMoviesData","fetchMoviesGenres","jsxDEV","_jsxDEV","App","_s","isMobile","setIsMobile","movieData","setMovieData","movieGenres","setMovieGenres","currentMovieGenre","setCurrentMovieGenre","currentMovieIndex","setCurrentMovieIndex","intervalTime","fetchMovies","data","sortedMovies","results","sort","a","b","vote_average","slice","error","console","fetchMovieGenres","genres","fetchMovieExpandedDetails","details","currentMovieGenreIds","genre_ids","currentMovieGenreNames","map","genreId","genre","find","id","name","join","intervalId","setInterval","prevIndex","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","mainMovie","_c","$RefreshReg$"],"sources":["/Users/eric/Documents/GitHub/ReactJS/cinemas_nos_react_2023/cnos_2023/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Header from \"./Layout/Header/Header\";\nimport MainIntro from './Layout/MainIntro/MainIntro';\nimport NowPlaying from './Layout/NowPlaying/NowPlaying';\nimport { fetchMoviesData, fetchMoviesGenres } from './Services/Utils/ApiRequests';\n\nfunction App() {\n  const [isMobile, setIsMobile] = useState(false);\n  const [movieData, setMovieData] = useState(null);\n  const [movieGenres, setMovieGenres] = useState(null);\n  const [currentMovieGenre, setCurrentMovieGenre] = useState([]);\n  const [currentMovieIndex, setCurrentMovieIndex] = useState(0); // Índice inicial\n  const intervalTime = 10000; // Alterar a cada 5 segundos (ou o que desejar)\n\n  const fetchMovies = async () => {\n    try {\n      const data = await fetchMoviesData();\n      const sortedMovies = data.results\n        .sort((a, b) => b.vote_average - a.vote_average) // Classificar em ordem decrescente de média de votos\n        .slice(0, 6); // Pegar os 6 primeiros filmes da lista classificada\n      setMovieData(sortedMovies);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const fetchMovieGenres = async () => {\n    try {\n      const data = await fetchMoviesGenres();\n      const genres = data.genres || [];\n      setMovieGenres(genres);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const fetchMovieExpandedDetails = async () => {\n    try {\n      const data = await fetchMovieExpandedDetails();\n      const details = data || [];\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    if (movieData && movieData[currentMovieIndex]) {\n      const currentMovieGenreIds = movieData[currentMovieIndex].genre_ids || [];\n      const currentMovieGenreNames = currentMovieGenreIds.map((genreId) => {\n        const genre = movieGenres.find((genre) => genre.id === genreId);\n        return genre ? genre.name : \"\";\n      }).join(\", \");\n      setCurrentMovieGenre(currentMovieGenreNames);\n    }\n  }, [currentMovieIndex, movieData, movieGenres]);\n\n  useEffect(() => {\n    fetchMovies();\n    fetchMovieGenres();\n    fetchMovieExpandedDetails();\n\n    // Configurar um intervalo para alterar o filme exibido a cada x segundos\n    const intervalId = setInterval(() => {\n      setCurrentMovieIndex((prevIndex) => (prevIndex + 1) % 6); // Alternar entre os 6 filmes\n    }, intervalTime);\n\n    return () => {\n      // Limpar o intervalo quando o componente é desmontado\n      clearInterval(intervalId);\n    };\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <Header />\n      {movieData && currentMovieGenre && (\n        <MainIntro mainMovie={movieData ? movieData : null} currentMovieIndex={currentMovieIndex} currentMovieGenre={currentMovieGenre} />\n      )}\n      <NowPlaying movieData={movieData} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}