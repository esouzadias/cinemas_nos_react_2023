{"ast":null,"code":"var _jsxFileName = \"/Users/eric/Documents/GitHub/ReactJS/cinemas_nos_react_2023/cnos_2023/src/Layout/MainIntro/MainIntro.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './MainIntro.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faPlay } from '@fortawesome/free-solid-svg-icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MainIntro({\n  mainMovie,\n  currentMovieIndex,\n  currentMovieGenre,\n  movieTime,\n  setTrailerPlaying\n}) {\n  _s();\n  var _mainMovie$currentMov, _mainMovie$currentMov2;\n  const [backgroundImage, setBackgroundImage] = useState(mainMovie && `url(https://image.tmdb.org/t/p/w500${mainMovie[currentMovieIndex].poster_path})`);\n  useEffect(() => {\n    mainMovie && setBackgroundImage(`url(https://image.tmdb.org/t/p/w500${mainMovie[currentMovieIndex].poster_path})`);\n    // Configurar um temporizador para alterar o plano de fundo a cada x segundos\n    const timerId = setTimeout(() => {\n      const nextIndex = (currentMovieIndex + 1) % 6; // Alternar entre os 6 filmes\n      setBackgroundImage(mainMovie && mainMovie[nextIndex] ? `url(https://image.tmdb.org/t/p/w500${mainMovie[nextIndex].poster_path})` : '');\n    }, 10000); // Alterar a cada 5 segundos (ou o que desejar)\n\n    return () => {\n      // Limpar o temporizador quando o componente é desmontado ou quando o índice muda\n      clearTimeout(timerId);\n    };\n  }, [currentMovieIndex, mainMovie]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-intro\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-player\",\n        style: {\n          backgroundImage: backgroundImage,\n          backgroundSize: 'cover'\n        },\n        children: /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n          onClick: handleTrailerClick,\n          className: \"icon\",\n          icon: faPlay\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-info\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movie-info-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [\"M16 \\u2022 \", currentMovieGenre ? currentMovieGenre : null, \" | \", movieTime ? movieTime : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: (_mainMovie$currentMov = mainMovie[currentMovieIndex]) === null || _mainMovie$currentMov === void 0 ? void 0 : _mainMovie$currentMov.original_title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: (_mainMovie$currentMov2 = mainMovie[currentMovieIndex]) === null || _mainMovie$currentMov2 === void 0 ? void 0 : _mainMovie$currentMov2.overview\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"L\\xEDngua: \", mainMovie[currentMovieIndex].original_language, /*#__PURE__*/_jsxDEV(\"button\", {\n              children: \"Comprar Bilhete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(MainIntro, \"Xl5x/nuCrCEmJzO+mzu7sP4louo=\");\n_c = MainIntro;\nexport default MainIntro;\nvar _c;\n$RefreshReg$(_c, \"MainIntro\");","map":{"version":3,"names":["React","useState","useEffect","FontAwesomeIcon","faPlay","jsxDEV","_jsxDEV","MainIntro","mainMovie","currentMovieIndex","currentMovieGenre","movieTime","setTrailerPlaying","_s","_mainMovie$currentMov","_mainMovie$currentMov2","backgroundImage","setBackgroundImage","poster_path","timerId","setTimeout","nextIndex","clearTimeout","children","className","style","backgroundSize","onClick","handleTrailerClick","icon","fileName","_jsxFileName","lineNumber","columnNumber","original_title","overview","original_language","_c","$RefreshReg$"],"sources":["/Users/eric/Documents/GitHub/ReactJS/cinemas_nos_react_2023/cnos_2023/src/Layout/MainIntro/MainIntro.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport './MainIntro.scss'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlay } from '@fortawesome/free-solid-svg-icons'\n\nfunction MainIntro({ mainMovie, currentMovieIndex, currentMovieGenre, movieTime, setTrailerPlaying }) {\n  const [backgroundImage, setBackgroundImage] = useState(mainMovie && (`url(https://image.tmdb.org/t/p/w500${mainMovie[currentMovieIndex].poster_path})`));\n  \n  useEffect(() => {\n    mainMovie && (setBackgroundImage(`url(https://image.tmdb.org/t/p/w500${mainMovie[currentMovieIndex].poster_path})`));\n    // Configurar um temporizador para alterar o plano de fundo a cada x segundos\n    const timerId = setTimeout(() => {\n      const nextIndex = (currentMovieIndex + 1) % 6; // Alternar entre os 6 filmes\n      setBackgroundImage(\n        mainMovie && mainMovie[nextIndex]\n          ? `url(https://image.tmdb.org/t/p/w500${mainMovie[nextIndex].poster_path})`\n          : ''\n      );\n    }, 10000); // Alterar a cada 5 segundos (ou o que desejar)\n\n    return () => {\n      // Limpar o temporizador quando o componente é desmontado ou quando o índice muda\n      clearTimeout(timerId);\n    };\n  }, [currentMovieIndex, mainMovie]);\n\n  return (\n    <div>\n      <div className='main-intro'>\n        <div className='video-player' style={{ backgroundImage: backgroundImage, backgroundSize: 'cover'}}>\n          <FontAwesomeIcon onClick={handleTrailerClick} className='icon' icon={faPlay} />\n        </div>\n        <div className='movie-info'>\n          <div className='movie-info-container'>\n            <span>M16 • {currentMovieGenre ? currentMovieGenre : null} | {movieTime ? movieTime : null}</span>\n            <h2>{mainMovie[currentMovieIndex]?.original_title}</h2>\n            <span>{mainMovie[currentMovieIndex]?.overview}</span>\n            <div>\n              Língua: {mainMovie[currentMovieIndex].original_language} \n              <button>Comprar Bilhete</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default MainIntro"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,kBAAkB;AACzB,SAASC,eAAe,QAAQ,gCAAgC;AAChE,SAASC,MAAM,QAAQ,mCAAmC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE1D,SAASC,SAASA,CAAC;EAAEC,SAAS;EAAEC,iBAAiB;EAAEC,iBAAiB;EAAEC,SAAS;EAAEC;AAAkB,CAAC,EAAE;EAAAC,EAAA;EAAA,IAAAC,qBAAA,EAAAC,sBAAA;EACpG,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGhB,QAAQ,CAACO,SAAS,IAAM,sCAAqCA,SAAS,CAACC,iBAAiB,CAAC,CAACS,WAAY,GAAG,CAAC;EAExJhB,SAAS,CAAC,MAAM;IACdM,SAAS,IAAKS,kBAAkB,CAAE,sCAAqCT,SAAS,CAACC,iBAAiB,CAAC,CAACS,WAAY,GAAE,CAAE;IACpH;IACA,MAAMC,OAAO,GAAGC,UAAU,CAAC,MAAM;MAC/B,MAAMC,SAAS,GAAG,CAACZ,iBAAiB,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC;MAC/CQ,kBAAkB,CAChBT,SAAS,IAAIA,SAAS,CAACa,SAAS,CAAC,GAC5B,sCAAqCb,SAAS,CAACa,SAAS,CAAC,CAACH,WAAY,GAAE,GACzE,EACN,CAAC;IACH,CAAC,EAAE,KAAK,CAAC,CAAC,CAAC;;IAEX,OAAO,MAAM;MACX;MACAI,YAAY,CAACH,OAAO,CAAC;IACvB,CAAC;EACH,CAAC,EAAE,CAACV,iBAAiB,EAAED,SAAS,CAAC,CAAC;EAElC,oBACEF,OAAA;IAAAiB,QAAA,eACEjB,OAAA;MAAKkB,SAAS,EAAC,YAAY;MAAAD,QAAA,gBACzBjB,OAAA;QAAKkB,SAAS,EAAC,cAAc;QAACC,KAAK,EAAE;UAAET,eAAe,EAAEA,eAAe;UAAEU,cAAc,EAAE;QAAO,CAAE;QAAAH,QAAA,eAChGjB,OAAA,CAACH,eAAe;UAACwB,OAAO,EAAEC,kBAAmB;UAACJ,SAAS,EAAC,MAAM;UAACK,IAAI,EAAEzB;QAAO;UAAA0B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC5E,CAAC,eACN3B,OAAA;QAAKkB,SAAS,EAAC,YAAY;QAAAD,QAAA,eACzBjB,OAAA;UAAKkB,SAAS,EAAC,sBAAsB;UAAAD,QAAA,gBACnCjB,OAAA;YAAAiB,QAAA,GAAM,aAAM,EAACb,iBAAiB,GAAGA,iBAAiB,GAAG,IAAI,EAAC,KAAG,EAACC,SAAS,GAAGA,SAAS,GAAG,IAAI;UAAA;YAAAmB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAClG3B,OAAA;YAAAiB,QAAA,GAAAT,qBAAA,GAAKN,SAAS,CAACC,iBAAiB,CAAC,cAAAK,qBAAA,uBAA5BA,qBAAA,CAA8BoB;UAAc;YAAAJ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACvD3B,OAAA;YAAAiB,QAAA,GAAAR,sBAAA,GAAOP,SAAS,CAACC,iBAAiB,CAAC,cAAAM,sBAAA,uBAA5BA,sBAAA,CAA8BoB;UAAQ;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eACrD3B,OAAA;YAAAiB,QAAA,GAAK,aACK,EAACf,SAAS,CAACC,iBAAiB,CAAC,CAAC2B,iBAAiB,eACvD9B,OAAA;cAAAiB,QAAA,EAAQ;YAAe;cAAAO,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7B,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACH;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACpB,EAAA,CAzCQN,SAAS;AAAA8B,EAAA,GAAT9B,SAAS;AA2ClB,eAAeA,SAAS;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}