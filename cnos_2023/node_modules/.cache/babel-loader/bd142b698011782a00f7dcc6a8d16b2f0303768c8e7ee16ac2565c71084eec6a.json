{"ast":null,"code":"var _jsxFileName = \"/Users/eric/Documents/GitHub/ReactJS/cinemas_nos_react_2023/cnos_2023/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport Header from \"./Layout/Header/Header\";\nimport MainIntro from './Layout/MainIntro/MainIntro';\nimport NowPlaying from './Layout/NowPlaying/NowPlaying';\nimport { fetchMoviesData, fetchMoviesGenres } from './Services/Utils/ApiRequests';\nimport cinemaStatic from './Assets/Images/cinema_icon_static.png';\nimport cinemaHover from './Assets/Images/output-onlinegiftools.gif';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isMobile, setIsMobile] = useState(false);\n  const [movieData, setMovieData] = useState(null);\n  const [movieGenres, setMovieGenres] = useState(null);\n  const [currentMovieGenre, setCurrentMovieGenre] = useState([]);\n  const [currentMovieIndex, setCurrentMovieIndex] = useState(0); // Índice inicial\n  const intervalTime = 10000; // Alterar a cada 5 segundos (ou o que desejar)\n  const [movieTimes, setMovieTimes] = useState([]); // Estado para armazenar os valores de movieTime\n  const [hover, setHover] = useState(false);\n  const fetchMoviesAndGenres = async () => {\n    try {\n      const movieResponse = await fetchMoviesData();\n      const genreResponse = await fetchMoviesGenres();\n      setMovieData(movieResponse.results);\n      setMovieGenres(genreResponse.genres);\n\n      // Gere aleatoriamente os valores de movieTime uma vez\n      const generatedMovieTimes = Array.from({\n        length: movieResponse.results.length\n      }, () => {\n        return `${Math.floor(Math.random() * (180 - 60 + 1)) + 60} Min`;\n      });\n      setMovieTimes(generatedMovieTimes);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  useEffect(() => {\n    if (movieData && movieData[currentMovieIndex]) {\n      const currentMovieGenreIds = movieData[currentMovieIndex].genre_ids || [];\n      const currentMovieGenreNames = currentMovieGenreIds.map(genreId => {\n        const genre = movieGenres === null || movieGenres === void 0 ? void 0 : movieGenres.find(genre => genre.id === genreId);\n        return genre ? genre.name : \"\";\n      }).join(\", \");\n      setCurrentMovieGenre(currentMovieGenreNames);\n    }\n  }, [currentMovieIndex, movieData, movieGenres]);\n  useEffect(() => {\n    fetchMoviesAndGenres();\n\n    // Configurar um intervalo para alterar o filme exibido a cada x segundos\n    const intervalId = setInterval(() => {\n      setCurrentMovieIndex(prevIndex => (prevIndex + 1) % 6); // Alternar entre os 6 filmes\n    }, intervalTime);\n    return () => {\n      // Limpar o intervalo quando o componente é desmontado\n      clearInterval(intervalId);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), movieData && currentMovieGenre && movieTimes.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(MainIntro, {\n        mainMovie: movieData ? movieData : null,\n        currentMovieIndex: currentMovieIndex,\n        currentMovieGenre: currentMovieGenre,\n        movieTime: movieTimes[currentMovieIndex]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movies-category\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"movies-category-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              id: \"filmesEmCartaz\",\n              children: \"Filmes em cartaz\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              id: \"brevemente\",\n              children: \"Brevemente\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"check-all-movies\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: hover ? cinemaHover : cinemaStatic,\n              alt: \"Cinema\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              onMouseEnter: () => setHover(true),\n              onMouseLeave: () => setHover(false),\n              children: \"Ver todos os filmes\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NowPlaying, {\n        movieGenres: movieGenres,\n        currentMovieGenre: currentMovieGenre,\n        currentMovieIndex: currentMovieIndex,\n        movieData: movieData,\n        movieTimes: movieTimes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"+7Y8oYrtcGjTuBRkPXqYhdQkM+Q=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Header","MainIntro","NowPlaying","fetchMoviesData","fetchMoviesGenres","cinemaStatic","cinemaHover","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","isMobile","setIsMobile","movieData","setMovieData","movieGenres","setMovieGenres","currentMovieGenre","setCurrentMovieGenre","currentMovieIndex","setCurrentMovieIndex","intervalTime","movieTimes","setMovieTimes","hover","setHover","fetchMoviesAndGenres","movieResponse","genreResponse","results","genres","generatedMovieTimes","Array","from","length","Math","floor","random","error","console","currentMovieGenreIds","genre_ids","currentMovieGenreNames","map","genreId","genre","find","id","name","join","intervalId","setInterval","prevIndex","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","mainMovie","movieTime","src","alt","onMouseEnter","onMouseLeave","_c","$RefreshReg$"],"sources":["/Users/eric/Documents/GitHub/ReactJS/cinemas_nos_react_2023/cnos_2023/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport Header from \"./Layout/Header/Header\";\nimport MainIntro from './Layout/MainIntro/MainIntro';\nimport NowPlaying from './Layout/NowPlaying/NowPlaying';\nimport { fetchMoviesData, fetchMoviesGenres } from './Services/Utils/ApiRequests';\nimport cinemaStatic from './Assets/Images/cinema_icon_static.png';\nimport cinemaHover from './Assets/Images/output-onlinegiftools.gif';\n\nfunction App() {\n  const [isMobile, setIsMobile] = useState(false);\n  const [movieData, setMovieData] = useState(null);\n  const [movieGenres, setMovieGenres] = useState(null);\n  const [currentMovieGenre, setCurrentMovieGenre] = useState([]);\n  const [currentMovieIndex, setCurrentMovieIndex] = useState(0); // Índice inicial\n  const intervalTime = 10000; // Alterar a cada 5 segundos (ou o que desejar)\n  const [movieTimes, setMovieTimes] = useState([]); // Estado para armazenar os valores de movieTime\n  const [hover, setHover] = useState(false);\n\n  const fetchMoviesAndGenres = async () => {\n    try {\n      const movieResponse = await fetchMoviesData();\n      const genreResponse = await fetchMoviesGenres();\n      setMovieData(movieResponse.results);\n      setMovieGenres(genreResponse.genres);\n\n      // Gere aleatoriamente os valores de movieTime uma vez\n      const generatedMovieTimes = Array.from({ length: movieResponse.results.length }, () => {\n        return `${Math.floor(Math.random() * (180 - 60 + 1)) + 60} Min`;\n      });\n      setMovieTimes(generatedMovieTimes);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  useEffect(() => {\n    if (movieData && movieData[currentMovieIndex]) {\n      const currentMovieGenreIds = movieData[currentMovieIndex].genre_ids || [];\n      const currentMovieGenreNames = currentMovieGenreIds.map((genreId) => {\n        const genre = movieGenres?.find((genre) => genre.id === genreId);\n        return genre ? genre.name : \"\";\n      }).join(\", \");\n      setCurrentMovieGenre(currentMovieGenreNames);\n    }\n  }, [currentMovieIndex, movieData, movieGenres]);\n\n  useEffect(() => {\n    fetchMoviesAndGenres();\n\n    // Configurar um intervalo para alterar o filme exibido a cada x segundos\n    const intervalId = setInterval(() => {\n      setCurrentMovieIndex((prevIndex) => (prevIndex + 1) % 6); // Alternar entre os 6 filmes\n    }, intervalTime);\n\n    return () => {\n      // Limpar o intervalo quando o componente é desmontado\n      clearInterval(intervalId);\n    };\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <Header />\n        {movieData && currentMovieGenre && movieTimes.length > 0 && (\n      <>\n        <MainIntro \n          mainMovie={movieData ? movieData : null} \n          currentMovieIndex={currentMovieIndex}\n          currentMovieGenre={currentMovieGenre}\n          movieTime={movieTimes[currentMovieIndex]}/>\n        <div className='movies-category'>\n          <div className='movies-category-content'>\n            <span>\n              <h2 id='filmesEmCartaz'>Filmes em cartaz</h2>\n              <h2 id='brevemente'>Brevemente</h2>\n            </span>\n            <div className='check-all-movies'>\n              <img src={hover ? cinemaHover : cinemaStatic} alt=\"Cinema\" />\n              <a\n                onMouseEnter={() => setHover(true)}\n                onMouseLeave={() => setHover(false)}\n              >Ver todos os filmes</a>\n            </div>\n          </div>\n        </div>\n        <NowPlaying movieGenres={movieGenres} currentMovieGenre={currentMovieGenre} currentMovieIndex={currentMovieIndex} movieData={movieData} movieTimes={movieTimes}/>\n      </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}