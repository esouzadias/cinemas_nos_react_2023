{"ast":null,"code":"export async function fetchMoviesData() {\n  const options = {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI3NmE2ODBkYzU2OTA5MTFiMDk2NWQxNjIyNzRjYWQyNCIsInN1YiI6IjY0ZmVmNjlhZTBjYTdmMDBlYzhjNWUzMCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.LJE_93KtynJ8yD1ZKTuitPKLEHmKe7A1T6T_FsVyz2w'\n    }\n  };\n  try {\n    const response = await fetch('https://api.themoviedb.org/3/movie/now_playing?api_key=76a680dc5690911b0965d162274cad24', options);\n    if (!response.ok) {\n      throw new Error('Erro na solicitação da API');\n    }\n    const data = await response.json();\n    return data; // Retorna os dados da API\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n}\nexport async function fetchMoviesImages(poster_path) {\n  const options = {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI3NmE2ODBkYzU2OTA5MTFiMDk2NWQxNjIyNzRjYWQyNCIsInN1YiI6IjY0ZmVmNjlhZTBjYTdmMDBlYzhjNWUzMCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.LJE_93KtynJ8yD1ZKTuitPKLEHmKe7A1T6T_FsVyz2w'\n    }\n  };\n  const apiKey = \"76a680dc5690911b0965d162274cad24\";\n  try {\n    const response = await fetch(`${poster_path}?api_key=${apiKey}`, options, {\n      headers: [{\n        key: 'Access-Control-Allow-Credentials',\n        value: 'true'\n      }, {\n        key: 'Access-Control-Allow-Origin',\n        value: '*'\n      }, {\n        key: 'Access-Control-Allow-Methods',\n        value: 'GET,OPTIONS,PATCH,DELETE,POST,PUT'\n      }, {\n        key: 'Access-Control-Allow-Headers',\n        value: 'X-CSRF-Token, X-Requested-With, Accept, Accept-Version, Content-Length, Content-MD5, Content-Type, Date, X-Api-Version, Authorization'\n      }]\n    });\n    response.headers.set('Content-Type', 'application/json');\n    if (!response.ok) {\n      throw new Error('Erro na solicitação da API');\n    }\n    const data = await response.json();\n    return data; // Retorna os dados da API\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n}","map":{"version":3,"names":["fetchMoviesData","options","method","headers","accept","Authorization","response","fetch","ok","Error","data","json","error","console","fetchMoviesImages","poster_path","apiKey","key","value","set"],"sources":["/Users/eric/Documents/GitHub/ReactJS/cinemas_nos_react_2023/cnos_2023/src/Services/Utils/ApiRequests.js"],"sourcesContent":["export async function fetchMoviesData() {\n  const options = {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI3NmE2ODBkYzU2OTA5MTFiMDk2NWQxNjIyNzRjYWQyNCIsInN1YiI6IjY0ZmVmNjlhZTBjYTdmMDBlYzhjNWUzMCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.LJE_93KtynJ8yD1ZKTuitPKLEHmKe7A1T6T_FsVyz2w'\n    }\n  };\n\n  try {\n    const response = await fetch('https://api.themoviedb.org/3/movie/now_playing?api_key=76a680dc5690911b0965d162274cad24', options);\n    if (!response.ok) {\n      throw new Error('Erro na solicitação da API');\n    }\n\n    const data = await response.json();\n    return data; // Retorna os dados da API\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n}\n\nexport async function fetchMoviesImages(poster_path) {\n  const options = {\n    method: 'GET',\n    headers: {\n      accept: 'application/json',\n      Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI3NmE2ODBkYzU2OTA5MTFiMDk2NWQxNjIyNzRjYWQyNCIsInN1YiI6IjY0ZmVmNjlhZTBjYTdmMDBlYzhjNWUzMCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.LJE_93KtynJ8yD1ZKTuitPKLEHmKe7A1T6T_FsVyz2w'\n    }\n  };\n  const apiKey = \"76a680dc5690911b0965d162274cad24\";\n\n  try {\n    const response = await fetch(`${poster_path}?api_key=${apiKey}`, options, {headers:\n    [\n          { key: 'Access-Control-Allow-Credentials', value: 'true' },\n          { key: 'Access-Control-Allow-Origin', value: '*' },\n          { key: 'Access-Control-Allow-Methods', value: 'GET,OPTIONS,PATCH,DELETE,POST,PUT' },\n          { key: 'Access-Control-Allow-Headers', value: 'X-CSRF-Token, X-Requested-With, Accept, Accept-Version, Content-Length, Content-MD5, Content-Type, Date, X-Api-Version, Authorization' },\n        ],\n    });\n    response.headers.set('Content-Type', 'application/json');\n    if (!response.ok) {\n      throw new Error('Erro na solicitação da API');\n    }\n\n    const data = await response.json();\n    \n    return data; // Retorna os dados da API\n  } catch (error) {\n    console.error(error);\n    throw error;\n  }\n}\n"],"mappings":"AAAA,OAAO,eAAeA,eAAeA,CAAA,EAAG;EACtC,MAAMC,OAAO,GAAG;IACdC,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACPC,MAAM,EAAE,kBAAkB;MAC1BC,aAAa,EAAE;IACjB;EACF,CAAC;EAED,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,yFAAyF,EAAEN,OAAO,CAAC;IAChI,IAAI,CAACK,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;IAC/C;IAEA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAClC,OAAOD,IAAI,CAAC,CAAC;EACf,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACpB,MAAMA,KAAK;EACb;AACF;AAEA,OAAO,eAAeE,iBAAiBA,CAACC,WAAW,EAAE;EACnD,MAAMd,OAAO,GAAG;IACdC,MAAM,EAAE,KAAK;IACbC,OAAO,EAAE;MACPC,MAAM,EAAE,kBAAkB;MAC1BC,aAAa,EAAE;IACjB;EACF,CAAC;EACD,MAAMW,MAAM,GAAG,kCAAkC;EAEjD,IAAI;IACF,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEQ,WAAY,YAAWC,MAAO,EAAC,EAAEf,OAAO,EAAE;MAACE,OAAO,EAClF,CACM;QAAEc,GAAG,EAAE,kCAAkC;QAAEC,KAAK,EAAE;MAAO,CAAC,EAC1D;QAAED,GAAG,EAAE,6BAA6B;QAAEC,KAAK,EAAE;MAAI,CAAC,EAClD;QAAED,GAAG,EAAE,8BAA8B;QAAEC,KAAK,EAAE;MAAoC,CAAC,EACnF;QAAED,GAAG,EAAE,8BAA8B;QAAEC,KAAK,EAAE;MAAwI,CAAC;IAE7L,CAAC,CAAC;IACFZ,QAAQ,CAACH,OAAO,CAACgB,GAAG,CAAC,cAAc,EAAE,kBAAkB,CAAC;IACxD,IAAI,CAACb,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;IAC/C;IAEA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAElC,OAAOD,IAAI,CAAC,CAAC;EACf,CAAC,CAAC,OAAOE,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACpB,MAAMA,KAAK;EACb;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}