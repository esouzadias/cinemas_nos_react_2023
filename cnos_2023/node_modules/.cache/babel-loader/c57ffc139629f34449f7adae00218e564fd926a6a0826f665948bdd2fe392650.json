{"ast":null,"code":"var _jsxFileName = \"/Users/eric/Documents/GitHub/ReactJS/cinemas_nos_react_2023/cnos_2023/src/Layout/MovieList/MovieList.js\",\n  _s = $RefreshSig$();\nimport React, { useMemo } from 'react';\nimport './MovieList.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MovieList({\n  movieData,\n  currentMovieIndex,\n  movieTimes,\n  movieGenres,\n  setMainMovie\n}) {\n  _s();\n  const displayedMovies = movieData && movieData.slice(0, 6);\n  const adultGenres = [\"Horror\", \"Thriller\", \"Drama\"];\n  const getMovieGenres = movieIndex => {\n    if (movieGenres && movieData && movieData[movieIndex]) {\n      const movieGenreIds = movieData[movieIndex].genre_ids || [];\n      const movieGenreNames = movieGenreIds.map(genreId => {\n        const genre = movieGenres.find(genre => genre.id === genreId);\n        return genre ? genre.name : \"\";\n      });\n      return movieGenreNames.join(\", \");\n    }\n    return \"\";\n  };\n  const isAdult = useMemo(() => {\n    if (movieGenres && movieData && movieData[currentMovieIndex]) {\n      const currentGenreIds = movieData[currentMovieIndex].genre_ids || [];\n      const currentGenreNames = currentGenreIds.map(genreId => {\n        const genre = movieGenres.find(genre => genre.id === genreId);\n        return genre ? genre.name : \"\";\n      });\n      return currentGenreNames.some(genre => adultGenres.includes(genre));\n    }\n    return false;\n  }, [movieGenres, movieData, currentMovieIndex]);\n  const handleMovieClick = movie => {\n    setMainMovie && setMainMovie(movie);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: displayedMovies && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"playing-movies\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: displayedMovies.map((movie, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: handleMovieClick(movie),\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: `https://image.tmdb.org/t/p/w500/${movie.poster_path}`,\n            alt: movie.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"movie-poster-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: movie.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: getMovieGenres(index)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: isAdult ? `M18 • ${movieTimes[index]}` : `M14 • ${movieTimes[index]}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 17\n          }, this)]\n        }, movie.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(MovieList, \"dQCzNnuffRWWCy57f4LEIY+qweY=\");\n_c = MovieList;\nexport default MovieList;\nvar _c;\n$RefreshReg$(_c, \"MovieList\");","map":{"version":3,"names":["React","useMemo","jsxDEV","_jsxDEV","MovieList","movieData","currentMovieIndex","movieTimes","movieGenres","setMainMovie","_s","displayedMovies","slice","adultGenres","getMovieGenres","movieIndex","movieGenreIds","genre_ids","movieGenreNames","map","genreId","genre","find","id","name","join","isAdult","currentGenreIds","currentGenreNames","some","includes","handleMovieClick","movie","children","index","onClick","src","poster_path","alt","title","fileName","_jsxFileName","lineNumber","columnNumber","className","_c","$RefreshReg$"],"sources":["/Users/eric/Documents/GitHub/ReactJS/cinemas_nos_react_2023/cnos_2023/src/Layout/MovieList/MovieList.js"],"sourcesContent":["import React, { useMemo } from 'react';\nimport './MovieList.scss';\n\nfunction MovieList({ movieData, currentMovieIndex, movieTimes, movieGenres, setMainMovie }) {\n  const displayedMovies = movieData && movieData.slice(0, 6);\n  const adultGenres = [\"Horror\", \"Thriller\", \"Drama\"];\n\n  const getMovieGenres = (movieIndex) => {\n    if (movieGenres && movieData && movieData[movieIndex]) {\n      const movieGenreIds = movieData[movieIndex].genre_ids || [];\n      const movieGenreNames = movieGenreIds.map((genreId) => {\n        const genre = movieGenres.find((genre) => genre.id === genreId);\n        return genre ? genre.name : \"\";\n      });\n      return movieGenreNames.join(\", \");\n    }\n    return \"\";\n  };\n\n  const isAdult = useMemo(() => {\n    if (movieGenres && movieData && movieData[currentMovieIndex]) {\n      const currentGenreIds = movieData[currentMovieIndex].genre_ids || [];\n      const currentGenreNames = currentGenreIds.map((genreId) => {\n        const genre = movieGenres.find((genre) => genre.id === genreId);\n        return genre ? genre.name : \"\";\n      });\n      return currentGenreNames.some((genre) => adultGenres.includes(genre));\n    }\n    return false;\n  }, [movieGenres, movieData, currentMovieIndex]);\n\n  const handleMovieClick = (movie) => {\n    setMainMovie && setMainMovie(movie);\n  }\n\n  return (\n    <div>\n      {displayedMovies && (\n        <div id='playing-movies'>\n          <ul>\n            {displayedMovies.map((movie, index) => (\n              <li onClick={handleMovieClick(movie)} key={movie.id}>\n                <img src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`} alt={movie.title} />\n                <div className='movie-poster-info'>\n                  <h3>{movie.title}</h3>\n                  <p>{getMovieGenres(index)}</p>\n                  <p>{isAdult ? `M18 • ${movieTimes[index]}` : `M14 • ${movieTimes[index]}`}</p>\n                </div>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default MovieList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}