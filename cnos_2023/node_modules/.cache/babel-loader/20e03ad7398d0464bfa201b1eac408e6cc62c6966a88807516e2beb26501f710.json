{"ast":null,"code":"var _jsxFileName = \"/Users/eric/Documents/GitHub/ReactJS/cinemas_nos_react_2023/cnos_2023/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Header from \"./Layout/Header/Header\";\nimport MainIntro from './Layout/MainIntro/MainIntro';\nimport NowPlaying from './Layout/NowPlaying/NowPlaying';\nimport { fetchMoviesData, fetchMoviesGenres } from './Services/Utils/ApiRequests';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [isMobile, setIsMobile] = useState(false);\n  const [movieData, setMovieData] = useState(null);\n  const [movieGenre, setMovieGenre] = useState(null);\n  const [currentMovieIndex, setCurrentMovieIndex] = useState(0); // Índice inicial\n  const intervalTime = 10000; // Alterar a cada 5 segundos (ou o que desejar)\n\n  const fetchMovies = async () => {\n    try {\n      const data = await fetchMoviesData();\n      const sortedMovies = data.results.sort((a, b) => b.vote_average - a.vote_average) // Classificar em ordem decrescente de média de votos\n      .slice(0, 6); // Pegar os 6 primeiros filmes da lista classificada\n      setMovieData(sortedMovies);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const fetchMovieGenres = async () => {\n    try {\n      const data = await fetchMoviesGenres();\n      const movieGenres = data.results;\n      handleMovieGenres(movieGenres);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n  const handleMovieGenres = movieGenres => {\n    const movieGere = movieData.foreach(movie => movie.genre_ids);\n  };\n  useEffect(() => {\n    fetchMovies();\n    fetchMovieGenres();\n\n    // Configurar um intervalo para alterar o filme exibido a cada x segundos\n    const intervalId = setInterval(() => {\n      setCurrentMovieIndex(prevIndex => (prevIndex + 1) % 6); // Alternar entre os 6 filmes\n    }, intervalTime);\n    return () => {\n      // Limpar o intervalo quando o componente é desmontado\n      clearInterval(intervalId);\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MainIntro, {\n      mainMovie: movieData ? movieData : null,\n      currentMovieIndex: currentMovieIndex,\n      currentMovieGenre: movieGenre\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NowPlaying, {\n      movieData: movieData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"7AL0EEPwsw9O+6IAUB0NBtgSXJU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Header","MainIntro","NowPlaying","fetchMoviesData","fetchMoviesGenres","jsxDEV","_jsxDEV","App","_s","isMobile","setIsMobile","movieData","setMovieData","movieGenre","setMovieGenre","currentMovieIndex","setCurrentMovieIndex","intervalTime","fetchMovies","data","sortedMovies","results","sort","a","b","vote_average","slice","error","console","fetchMovieGenres","movieGenres","handleMovieGenres","movieGere","foreach","movie","genre_ids","intervalId","setInterval","prevIndex","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","mainMovie","currentMovieGenre","_c","$RefreshReg$"],"sources":["/Users/eric/Documents/GitHub/ReactJS/cinemas_nos_react_2023/cnos_2023/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport Header from \"./Layout/Header/Header\";\nimport MainIntro from './Layout/MainIntro/MainIntro';\nimport NowPlaying from './Layout/NowPlaying/NowPlaying';\nimport { fetchMoviesData, fetchMoviesGenres } from './Services/Utils/ApiRequests';\n\nfunction App() {\n  const [isMobile, setIsMobile] = useState(false);\n  const [movieData, setMovieData] = useState(null);\n  const [movieGenre, setMovieGenre] = useState(null);\n  const [currentMovieIndex, setCurrentMovieIndex] = useState(0); // Índice inicial\n  const intervalTime = 10000; // Alterar a cada 5 segundos (ou o que desejar)\n\n  const fetchMovies = async () => {\n    try {\n      const data = await fetchMoviesData();\n      const sortedMovies = data.results\n        .sort((a, b) => b.vote_average - a.vote_average) // Classificar em ordem decrescente de média de votos\n        .slice(0, 6); // Pegar os 6 primeiros filmes da lista classificada\n      setMovieData(sortedMovies);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const fetchMovieGenres = async () => {\n    try {\n      const data = await fetchMoviesGenres();\n      const movieGenres = data.results\n      handleMovieGenres(movieGenres);\n    } catch (error) {\n      console.error(error);\n    }\n  };\n\n  const handleMovieGenres = (movieGenres) => {\n    const movieGere = movieData.foreach(movie => movie.genre_ids)\n  }\n\n  useEffect(() => {\n    fetchMovies();\n    fetchMovieGenres();\n\n    // Configurar um intervalo para alterar o filme exibido a cada x segundos\n    const intervalId = setInterval(() => {\n      setCurrentMovieIndex((prevIndex) => (prevIndex + 1) % 6); // Alternar entre os 6 filmes\n    }, intervalTime);\n\n    return () => {\n      // Limpar o intervalo quando o componente é desmontado\n      clearInterval(intervalId);\n    };\n  }, [])\n\n  return (\n    <div className=\"App\">\n      <Header />\n      <MainIntro mainMovie={movieData ? movieData : null} currentMovieIndex={currentMovieIndex} currentMovieGenre={movieGenre} />\n      <NowPlaying movieData={movieData} />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}