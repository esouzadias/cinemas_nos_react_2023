{"ast":null,"code":"var _jsxFileName = \"/Users/eric/Documents/GitHub/ReactJS/cinemas_nos_react_2023/cnos_2023/src/Layout/NowPlaying/NowPlaying.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './NowPlaying.scss';\nimport cinemaStatic from '../../Assets/Images/cinema_icon_static.png';\nimport cinemaHover from '../../Assets/Images/output-onlinegiftools.gif';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NowPlaying({\n  movieData,\n  currentMovieIndex,\n  movieTimes,\n  movieGenres\n}) {\n  _s();\n  const [hover, setHover] = useState(false);\n  const displayedMovies = movieData && movieData.slice(0, 6);\n  const adultGenres = [\"Horror\", \"Thriller\", \"Drama\"];\n  const getMovieGenres = movieIndex => {\n    if (movieGenres && movieData && movieData[movieIndex]) {\n      const movieGenreIds = movieData[movieIndex].genre_ids || [];\n      const movieGenreNames = movieGenreIds.map(genreId => {\n        const genre = movieGenres.find(genre => genre.id === genreId);\n        return genre ? genre.name : \"\";\n      });\n      return movieGenreNames.join(\", \");\n    }\n    return \"\";\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: displayedMovies && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"playing-movies\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Filmes em cartaz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"check-all-movies\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: hover ? cinemaHover : cinemaStatic,\n            alt: \"Cinema\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n            onMouseEnter: () => setHover(true),\n            onMouseLeave: () => setHover(false),\n            children: \"Ver todos os filmes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: displayedMovies.map((movie, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: `https://image.tmdb.org/t/p/w500/${movie.poster_path}`,\n            alt: movie.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"movie-poster-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: movie.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: currentMovieGenre\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }, this)]\n        }, movie.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(NowPlaying, \"bRXmKus9fOZFlca/6zXTYU+twGY=\");\n_c = NowPlaying;\nexport default NowPlaying;\nvar _c;\n$RefreshReg$(_c, \"NowPlaying\");","map":{"version":3,"names":["React","useState","useEffect","cinemaStatic","cinemaHover","jsxDEV","_jsxDEV","NowPlaying","movieData","currentMovieIndex","movieTimes","movieGenres","_s","hover","setHover","displayedMovies","slice","adultGenres","getMovieGenres","movieIndex","movieGenreIds","genre_ids","movieGenreNames","map","genreId","genre","find","id","name","join","children","fileName","_jsxFileName","lineNumber","columnNumber","className","src","alt","onMouseEnter","onMouseLeave","movie","index","poster_path","title","currentMovieGenre","_c","$RefreshReg$"],"sources":["/Users/eric/Documents/GitHub/ReactJS/cinemas_nos_react_2023/cnos_2023/src/Layout/NowPlaying/NowPlaying.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './NowPlaying.scss';\nimport cinemaStatic from '../../Assets/Images/cinema_icon_static.png';\nimport cinemaHover from '../../Assets/Images/output-onlinegiftools.gif';\n\nfunction NowPlaying({ movieData, currentMovieIndex, movieTimes, movieGenres }) {\n  const [hover, setHover] = useState(false);\n  const displayedMovies = movieData && movieData.slice(0, 6);\n  const adultGenres = [\"Horror\", \"Thriller\", \"Drama\"];\n\n  const getMovieGenres = (movieIndex) => {\n    if (movieGenres && movieData && movieData[movieIndex]) {\n      const movieGenreIds = movieData[movieIndex].genre_ids || [];\n      const movieGenreNames = movieGenreIds.map((genreId) => {\n        const genre = movieGenres.find((genre) => genre.id === genreId);\n        return genre ? genre.name : \"\";\n      });\n      return movieGenreNames.join(\", \");\n    }\n    return \"\";\n  };\n\n  return (\n    <div>\n      {displayedMovies && (\n        <div id='playing-movies'>\n          <span>\n            <h2>Filmes em cartaz</h2>\n            <div className='check-all-movies'>\n              <img src={hover ? cinemaHover : cinemaStatic} alt=\"Cinema\" />\n              <a\n                onMouseEnter={() => setHover(true)}\n                onMouseLeave={() => setHover(false)}\n              >Ver todos os filmes</a>\n            </div>\n          </span>\n          <ul>\n            {displayedMovies.map((movie, index) => (\n              <li key={movie.id}>\n                <img src={`https://image.tmdb.org/t/p/w500/${movie.poster_path}`} alt={movie.title} />\n                <div className='movie-poster-info'>\n                  <h3>{movie.title}</h3>\n                  <p>{currentMovieGenre}</p>\n                  {/* <p>{movie.adult == true && isAdultMovie(currentMovieGenre) ? \"M18 • \" : \"M14 • \" + movieTimes[index]}</p> */}\n                </div>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default NowPlaying;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}